/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ludo;

import conexion.Cliente;
import conexion.Servidor;
import core.Jugador;
import core.Partida;
import java.awt.GridLayout;
import java.io.IOException;
import java.net.ConnectException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author Francisco
 */
public class Inicio extends javax.swing.JFrame {

    private Servidor server;

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        
        partidaButton.setVisible(false);
        jugadorButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        iniciarButton = new javax.swing.JButton();
        serverButton = new javax.swing.JButton();
        partidaButton = new javax.swing.JButton();
        jugadorButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        iniciarButton.setText("Ingresar a una partida");
        iniciarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarButtonActionPerformed(evt);
            }
        });

        serverButton.setText("Crear servidor");
        serverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverButtonActionPerformed(evt);
            }
        });

        partidaButton.setText("Crear Partida");
        partidaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partidaButtonActionPerformed(evt);
            }
        });

        jugadorButton.setText("Registrar Jugador");
        jugadorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jugadorButtonActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");

        jButton1.setText("play");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(iniciarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addComponent(serverButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(140, 140, 140)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jugadorButton)
                                    .addComponent(partidaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(partidaButton)
                .addGap(1, 1, 1)
                .addComponent(jButton1)
                .addGap(7, 7, 7)
                .addComponent(jugadorButton)
                .addGap(36, 36, 36)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverButton)
                    .addComponent(iniciarButton))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void serverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverButtonActionPerformed
        
        try {
            this.server = new Servidor(9000);
            
           JOptionPane.showMessageDialog(this, String.format("%s: %s", "servidor creado en", this.server.getIpAndPort()));
           
           serverButton.enableInputMethods(false);
           
            partidaButton.setVisible(true);
            jugadorButton.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error al crear Servidor");
        }
    }//GEN-LAST:event_serverButtonActionPerformed

    private void partidaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partidaButtonActionPerformed
        String nombrePartida = JOptionPane.showInputDialog(this, "Ingresar nombre de la sala");
        System.out.println(nombrePartida);
        if (! this.server.crearPartida(nombrePartida)){
            JOptionPane.showMessageDialog( this, "El nombre de la sala ya esta en uso");
        }else{
            JOptionPane.showMessageDialog( this, "Partida creada");
        }
    }//GEN-LAST:event_partidaButtonActionPerformed

    private void jugadorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jugadorButtonActionPerformed
        String[] salas = new String[this.server.getPartidas().size()];
        for (int i = 0; i < this.server.getPartidas().size(); i++)
            salas[i] = this.server.getPartidas().get(i).getNombre();
        
        JComboBox<String> combo = new JComboBox<>(salas);
        JTextField nombre = new JTextField("");
        JTextField apellido = new JTextField(null);
        JTextField username = new JTextField("");
        JPasswordField password = new JPasswordField("");
        JPanel panel = new JPanel(new GridLayout(0, 1));
        panel.add(new JLabel("salas:"));
        panel.add(combo);
        panel.add(new JLabel("Nombre:"));
        panel.add(nombre);
        panel.add(new JLabel("Apellido:"));
        panel.add(apellido);
        panel.add(new JLabel("Nombre de usuario:"));
        panel.add(username);
        panel.add(new JLabel("Constraseña:"));
        panel.add(password);
        
        int result = JOptionPane.showConfirmDialog(null, panel, "Registro de usuario",
            JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        
        if (result == JOptionPane.OK_OPTION) {
            System.out.println(combo.getSelectedItem()
                + " " + apellido.getText()
                + " " + password.getPassword());
            
            if (apellido.getText().equals("") || username.getText().equals("")
                    || nombre.getText().equals("") || password.getText().equals("") )
                JOptionPane.showMessageDialog( this, "No puede ingresar valores nulos");
            else{
                String r = this.server.registrarJugador(combo.getSelectedItem().toString(), nombre.getText(), 
                        apellido.getText(), username.getText(), password.getText());
                JOptionPane.showMessageDialog( this, r);
            }
            
        
        } else {
            System.out.println("Canelado");
        }
    }//GEN-LAST:event_jugadorButtonActionPerformed

    private void iniciarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarButtonActionPerformed
        JTextField username = new JTextField("");
        JTextField ip = new JTextField("");
        JPasswordField password = new JPasswordField("");
        JPanel panel = new JPanel(new GridLayout(0, 1));
        
        panel.add(new JLabel("Ip del servidor:"));
        panel.add(ip);
        panel.add(new JLabel("Nombre de usuario:"));
        panel.add(username);
        panel.add(new JLabel("Contraseña:"));
        panel.add(password);
        int result = JOptionPane.showConfirmDialog(null, panel, "Test",
            JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {
            System.out.println(" " + username.getText()
                + " " + password.getText());
            
            try {
                cliente = new Cliente(ip.getText(), 9000 );
                cliente.login(username.getText(), password.getText());
            } catch (ConnectException e){
                JOptionPane.showMessageDialog( this, "No puede conectar al servidor");
            }catch (IOException ex) {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            System.out.println("Cancelled");
        }
    }//GEN-LAST:event_iniciarButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Partida partida = this.server.getPartidas().get(0);
        Jugador jugador = partida.getJugadores().get(0);
        TurnoJugador turno = new TurnoJugador(jugador);
        turno.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private Cliente cliente;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton iniciarButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jugadorButton;
    private javax.swing.JButton partidaButton;
    private javax.swing.JButton serverButton;
    // End of variables declaration//GEN-END:variables
}
